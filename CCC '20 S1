import java.util.*;
import java.io.*;
public class Main {
   static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
   static StringTokenizer st;
   public static void main(String[] args) throws IOException {
    int n = readInt();
    int[][] obs = new int[n][2];
    for (int i = 0; i < n; i++) {
        obs[i][0] = readInt();
        obs[i][1] = readInt(); 
    }

    Arrays.sort(obs, (a, b) -> Integer.compare(a[0], b[0]));

    double max = 0;
    for (int i = 0; i < n - 1; i++) {
        double dt = obs[i+1][0] - obs[i][0];
        double dx = Math.abs(obs[i+1][1] - obs[i][1]);
        double speed = dx / dt;
        if (speed > max) max = speed;
    }

    System.out.println(max);
   } static String next() throws IOException { 
       while (st == null || ! st.hasMoreTokens())
           st = new StringTokenizer(br.readLine().trim());
       return st.nextToken();
   }
   static long readLong() throws IOException {
       return Long.parseLong(next());
   }
   static int readInt() throws IOException {
       return Integer.parseInt(next());
   }
   static double readDouble() throws IOException {
       return Double.parseDouble(next());
   }
   static char readChar() throws IOException {
       return next().charAt(0);
   } 
   static String readLine() throws IOException {
       return br.readLine().trim();
   }
}
